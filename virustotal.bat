@echo off
setlocal

REM Set your VirusTotal API key here
set "VT_API_KEY=YOUR_API_KEY"

REM Check if a file was dragged onto the batch file
if "%~1"=="" (
    echo No file dragged onto the batch file.
    exit /b 1
)

REM Check if cURL is installed
where curl >nul 2>&1
if errorlevel 1 (
    echo cURL is not installed. Please install cURL and try again.
    exit /b 1
)

REM Define the VirusTotal API URL
set "VT_URL=https://www.virustotal.com/vtapi/v2/file/report"

REM Upload the file to VirusTotal
echo Uploading file to VirusTotal...
curl -s -X POST -F "apikey=%VT_API_KEY%" -F "file=@%~1" "%VT_URL%" > response.json

REM Check if the file exists on VirusTotal
findstr /C:"response_code\":0" response.json >nul
if errorlevel 1 (
    echo File not found on VirusTotal or error occurred.
    del response.json
    exit /b 1
)

REM Parse the JSON response to get sandbox detection
powershell -Command "$json = Get-Content -Raw -Path response.json | ConvertFrom-Json; $detected = $json.positives; $total = $json.total; $detectedSandbox = $json.scans | Where-Object { $_.result -like '*sandbox*' }; $detectedSandbox | ForEach-Object { echo Sandbox: $_.result }; echo Total detected: $detected out of $total." > result.txt

REM Create XML file
powershell -Command "$xml = [xml]'<results></results>'; $sandboxResults = $json.scans | Where-Object { $_.result -like '*sandbox*' }; foreach ($result in $sandboxResults) { $sandboxNode = $xml.CreateElement('sandbox'); $sandboxNode.SetAttribute('name', $result.name); $sandboxNode.SetAttribute('verdict', $result.result); $xml.results.AppendChild($sandboxNode) }; $xml.Save('results.xml')"

REM Print the result
type result.txt
echo Results saved to results.xml

REM Clean up
del response.json result.txt
